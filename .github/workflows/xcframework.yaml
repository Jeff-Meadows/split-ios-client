name: Build xcframework

on:
  push:
    branches: 
      - release_*

jobs:
  build:
    runs-on: [macos-latest]

    steps:
    - name: Select Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: 13.0
        
    - name: Computing release version
      run: ref=${{ github.ref }}; echo "version=$(echo ${ref#refs/heads/test_xcframework_})" >> $GITHUB_ENV
      
    - name: Computing branch name
      run: ref=${{ github.ref }}; echo "branch_name=$(echo ${ref#refs/heads/})" >> $GITHUB_ENV

    - name: Computing artifact name
      run: echo "artifact_name=SplitXcFramework" >> $GITHUB_ENV

    - name: Computing artifact name
      run: echo "zip_name=split-ios-${{ env.version }}.zip" >> $GITHUB_ENV

    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: ${{ env.branch_name }}

    - name: Check tag type and add it to env
      run: echo "release_type=$(./check_tag_type ${{ github.ref }})" >> $GITHUB_ENV; echo "release_type=$(./check_tag_type ${{ github.ref }})"

    - name: Create xcframework for release
      run: ./gen_static_xcframework ${{ env.version }} ${{ env.release_type }} ${{ env.artifact_name }}
      
    - name: Commit package file (url and checksum)
      run: |
        git add Package.swift
        git commit -m "Added new release xcframework url and checksum"
        git push origin ${{ env.branch_name }}
      
    - uses: chrislennon/action-aws-cli@v1.1    

    - if: ${{ env.release_type == 0 }}
      run: aws s3 cp ./Split_XCFramework/${{ env.zip_name }} s3://aws-development-split-public/mobile/ios-xcframework/${{ env.zip_name }} --acl public-read
#       run: |
#         echo "type release stable: ${{ env.release_type }}"
#       run: aws s3 cp ./Split_XCFramework/Split.xcframework s3://aws-development-split-public/mobile/ios-xcframework
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.PUBLIC_ASSETS_STAGE_USER }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.PUBLIC_ASSETS_STAGE_KEY }}
  
    - if: ${{ env.release_type == 1 }}
      run: aws s3 cp ./Split_XCFramework/${{ env.zip_name }} s3://split-public/sdk/${{ env.zip_name }} --acl public-read 
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.PUBLIC_ASSETS_PROD_USER }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.PUBLIC_ASSETS_PROD_KEY }}
